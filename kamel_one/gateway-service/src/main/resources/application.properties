# Server Port for Gateway
server.port=8080

# Service Name (for Eureka)
spring.application.name=gateway-service

# Eureka Client Configuration
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true

# Spring Cloud Gateway Routes
# Routes will be dynamically discovered via Eureka if using DiscoveryLocator
# spring.cloud.gateway.discovery.locator.enabled=true
# spring.cloud.gateway.discovery.locator.lower-case-service-id=true # Optional: if service IDs are lowercase

# Or define routes explicitly:
spring.cloud.gateway.routes[0].id=product-service-route
spring.cloud.gateway.routes[0].uri=lb://PRODUCT-SERVICE # lb://<service-name-in-eureka>
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/products/**
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/api/products/(?<segment>.*), /products/${segment}

# Example for customer-service (can be added later or configured via Config Server)
# spring.cloud.gateway.routes[1].id=customer-service-route
# spring.cloud.gateway.routes[1].uri=lb://CUSTOMER-SERVICE
# spring.cloud.gateway.routes[1].predicates[0]=Path=/api/customers/**
# spring.cloud.gateway.routes[1].filters[0]=RewritePath=/api/customers/(?<segment>.*), /customers/${segment}

# Logging level for gateway
logging.level.org.springframework.cloud.gateway=TRACE
logging.level.reactor.netty.http.client=DEBUG
logging.level.org.springframework.boot.autoconfigure.web=DEBUG
